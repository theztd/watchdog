name: Security Scan Simple Report

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  security:
    name: Run security checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          echo "Running govulncheck..."
          govulncheck ./... > govulncheck-report.txt || true
          issues=$(grep -c '"OSV"' govulncheck-report.txt || true)
          if [ "$issues" -eq "0" ]; then
            echo "govulncheck: OK (0 issues)" >> $GITHUB_STEP_SUMMARY
          else
            echo "govulncheck: FAIL ($issues issues)" >> $GITHUB_STEP_SUMMARY
            cat govulncheck-report.txt
          fi

      - name: Run gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          echo "Running gosec..."
          gosec -fmt json -out gosec-report.json ./... || true
          issues=$(grep -o '"severity":' gosec-report.json | wc -l || true)
          if [ "$issues" -eq "0" ]; then
            echo "gosec: OK (0 issues)" >> $GITHUB_STEP_SUMMARY
          else
            echo "gosec: FAIL ($issues issues)" >> $GITHUB_STEP_SUMMARY
            cat gosec-report.json
          fi

      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          echo "Running staticcheck..."
          staticcheck -f json ./... > staticcheck-report.json || true
          issues=$(grep -o '"code":' staticcheck-report.json | wc -l || true)
          if [ "$issues" -eq "0" ]; then
            echo "staticcheck: OK (0 issues)" >> $GITHUB_STEP_SUMMARY
          else
            echo "staticcheck: FAIL ($issues issues)" >> $GITHUB_STEP_SUMMARY
            cat staticcheck-report.json
          fi
